generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider    = "postgresql"
  url         = env("DATABASE_URL")
  directUrl   = env("POSTGRES_URL_NON_POOLING")
}

model Association {
  id           String        @id @default(uuid())
  name         String
  email        String        @unique

  products     Product[]
  categories   Category[]
  transactions Transaction[]

  createdAt    DateTime      @default(now())
  updatedAt    DateTime?     @updatedAt
}

model Product {
  id             String        @id @default(uuid())
  name           String
  description    String
  price          Decimal       @db.Decimal(10,2)
  quantity       Int           @default(0)
  unit           String
  imageUrl       String

  categoryId     String
  associationId  String?

  category       Category      @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  association    Association?  @relation(fields: [associationId], references: [id], onDelete: SetNull)
  transactions   Transaction[]

  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Category {
  id             String        @id @default(uuid())
  name           String
  description    String?

  associationId  String?
  association    Association?  @relation(fields: [associationId], references: [id], onDelete: SetNull)
  products       Product[]
  
  createdAt      DateTime      @default(now())
  updatedAt      DateTime?     @updatedAt
}

model Transaction {
  id             String        @id @default(uuid())
  type           String
  quantity       Int
  productId      String
  associationId  String?

  product        Product       @relation(fields: [productId], references: [id], onDelete: Cascade)
  association    Association?  @relation(fields: [associationId], references: [id], onDelete: SetNull)

  createdAt      DateTime      @default(now())
}
